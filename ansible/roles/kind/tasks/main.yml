---
# Kind cluster installation and setup

- name: Download kind binary
  get_url:
    url: "https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64"
    dest: "/usr/local/bin/kind"
    mode: '0755'

- name: Download kubectl binary
  get_url:
    url: "https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl"
    dest: "/usr/local/bin/kubectl"
    mode: '0755'

- name: Create kind cluster configuration
  copy:
    content: |
      kind: Cluster
      apiVersion: kind.x-k8s.io/v1alpha4
      name: kind-hello-01
      nodes:
      - role: control-plane
        kubeadmConfigPatches:
        - |
          kind: InitConfiguration
          nodeRegistration:
            kubeletExtraArgs:
              node-labels: "ingress-ready=true"
        extraPortMappings:
        - containerPort: 80
          hostPort: 80
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          protocol: TCP
        - containerPort: 3000
          hostPort: 3000
          protocol: TCP
        - containerPort: 8080
          hostPort: 8080
          protocol: TCP
        - containerPort: 12000
          hostPort: 12000
          protocol: TCP
      - role: worker
      networking:
        disableDefaultCNI: true
        podSubnet: "10.244.0.0/16"
        serviceSubnet: "10.96.0.0/12"
    dest: "/opt/{{ app_name }}/config/kind-config.yaml"
    owner: "{{ app_name }}"
    group: "{{ app_name }}"
    mode: '0644'

- name: Check if kind cluster exists
  command: kind get clusters
  register: kind_clusters
  changed_when: false
  failed_when: false

- name: Create kind cluster
  command: kind create cluster --config /opt/{{ app_name }}/config/kind-config.yaml
  when: "'kind-hello-01' not in kind_clusters.stdout"
  become_user: "{{ app_name }}"

- name: Wait for cluster to be ready
  command: kubectl wait --for=condition=Ready nodes --all --timeout=300s
  when: "'kind-hello-01' not in kind_clusters.stdout"
  become_user: "{{ app_name }}"

- name: Create application namespace
  kubernetes.core.k8s:
    name: project-management
    api_version: v1
    kind: Namespace
    state: present
  become_user: "{{ app_name }}"

- name: Create storage directory for persistent volumes
  file:
    path: "/tmp/project-data-0001"
    state: directory
    mode: '0755'

