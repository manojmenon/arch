openapi: 3.0.3
info:
  title: Project Management System - Projects API
  description: Project management API for residential projects
  version: 1.0.0
  contact:
    name: Project Management Team
    email: support@projectmanagement.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080/api
    description: Development server
  - url: https://api.projectmanagement.com/api
    description: Production server

paths:
  /projects:
    get:
      summary: List projects
      description: Get a list of all projects with pagination
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Number of projects to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          description: Number of projects to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Projects retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create a new project
      description: Create a new residential project (requires localadmin role or higher)
      tags:
        - Projects
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
            example:
              name: "Downtown Residential Complex"
              address: "123 Main St"
              city: "New York"
              state: "NY"
              postal_code: "10001"
              owner_name: "John Smith"
              status: "active"
              budget: 2500000.00
              start_date: "2024-01-01"
              end_date: "2024-12-31"
              metadata:
                floors: 20
                units: 150
                amenities: ["gym", "pool", "parking"]
              documents:
                permits: ["building", "electrical"]
                contracts: ["construction", "architect"]
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/{id}:
    get:
      summary: Get a project
      description: Get project details by ID
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Project ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Project retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid project ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update a project
      description: Update project details (requires localadmin role or higher)
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Project ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
            example:
              name: "Updated Project Name"
              status: "completed"
              budget: 3000000.00
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a project
      description: Delete a project by ID (requires localadmin role or higher)
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Project ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Project deleted successfully
        '400':
          description: Invalid project ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/stats:
    get:
      summary: Get project statistics
      description: Get project count and statistics
      tags:
        - Projects
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_projects:
                    type: integer
                    example: 100
                  active_projects:
                    type: integer
                    example: 25
                  completed_projects:
                    type: integer
                    example: 60
                  total_budget:
                    type: number
                    format: float
                    example: 50000000.00
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "660e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "Downtown Residential Complex"
        address:
          type: string
          nullable: true
          example: "123 Main St"
        city:
          type: string
          nullable: true
          example: "New York"
        state:
          type: string
          nullable: true
          example: "NY"
        postal_code:
          type: string
          nullable: true
          example: "10001"
        owner_name:
          type: string
          nullable: true
          example: "John Smith"
        status:
          type: string
          nullable: true
          enum: [planning, active, completed, on-hold, cancelled]
          example: "active"
        budget:
          type: number
          format: float
          nullable: true
          example: 2500000.00
        start_date:
          type: string
          format: date
          nullable: true
          example: "2024-01-01"
        end_date:
          type: string
          format: date
          nullable: true
          example: "2024-12-31"
        metadata:
          type: object
          nullable: true
          additionalProperties: true
          example:
            floors: 20
            units: 150
            amenities: ["gym", "pool", "parking"]
        documents:
          type: object
          nullable: true
          additionalProperties: true
          example:
            permits: ["building", "electrical"]
            contracts: ["construction", "architect"]
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    CreateProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: "Downtown Residential Complex"
        address:
          type: string
          maxLength: 255
          example: "123 Main St"
        city:
          type: string
          maxLength: 100
          example: "New York"
        state:
          type: string
          maxLength: 100
          example: "NY"
        postal_code:
          type: string
          maxLength: 20
          example: "10001"
        owner_name:
          type: string
          maxLength: 255
          example: "John Smith"
        status:
          type: string
          enum: [planning, active, completed, on-hold, cancelled]
          example: "active"
        budget:
          type: number
          format: float
          minimum: 0
          example: 2500000.00
        start_date:
          type: string
          format: date
          example: "2024-01-01"
        end_date:
          type: string
          format: date
          example: "2024-12-31"
        metadata:
          type: object
          additionalProperties: true
          example:
            floors: 20
            units: 150
            amenities: ["gym", "pool", "parking"]
        documents:
          type: object
          additionalProperties: true
          example:
            permits: ["building", "electrical"]
            contracts: ["construction", "architect"]

    UpdateProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: "Updated Project Name"
        address:
          type: string
          maxLength: 255
          example: "456 Updated St"
        city:
          type: string
          maxLength: 100
          example: "Los Angeles"
        state:
          type: string
          maxLength: 100
          example: "CA"
        postal_code:
          type: string
          maxLength: 20
          example: "90210"
        owner_name:
          type: string
          maxLength: 255
          example: "Jane Doe"
        status:
          type: string
          enum: [planning, active, completed, on-hold, cancelled]
          example: "completed"
        budget:
          type: number
          format: float
          minimum: 0
          example: 3000000.00
        start_date:
          type: string
          format: date
          example: "2024-02-01"
        end_date:
          type: string
          format: date
          example: "2024-11-30"
        metadata:
          type: object
          additionalProperties: true
          example:
            floors: 25
            units: 200
            amenities: ["gym", "pool", "parking", "concierge"]
        documents:
          type: object
          additionalProperties: true
          example:
            permits: ["building", "electrical", "plumbing"]
            contracts: ["construction", "architect", "interior"]

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request data"
        message:
          type: string
          example: "Detailed error message"
        code:
          type: integer
          example: 400

